[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Northwestern University", email = "DL_FSM_GDS@e.northwestern.edu"}
]
classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    # Meant as compatibility constraints
    "invenio-app-rdm>=12.0.0,<14.0.0",
    # Meant as usage listing
    "click",
    "flask",
    "invenio_access",
    "invenio_db",
    "invenio_pidstore",
    "invenio_rdm_records",
    "invenio_records_resources",
    "invenio_vocabularies",
    "requests",
    "sqlalchemy",
]
description = "Subject terms tooling for InvenioRDM"
keywords = ["invenio", "inveniordm", "subjects"]
license = {file = "LICENSE"}
name = "galter-subjects-utils"
readme = "README.md"
requires-python = ">=3.9"
scripts = {galter-subjects-utils = "galter_subjects_utils.cli:main"}
urls = {Repository = "https://github.com/galterlibrary/galter-subjects-utils"}
version = "0.7.0pre"

[project.optional-dependencies]
dev = [
    "check-manifest>=0.49",
    "invenio-search[opensearch2]>=2.1.0,<3.0.0",  # Needs to be specified separately as it's up to instance
    "invoke>=2.2,<3.0",
    "pytest-invenio>=2.1.1,<3.0.0",
    # pytest-invenio includes pytest & co and docker-services-cli
]

dev_pre = [
    "check-manifest>=0.49",
    "invenio-search[opensearch2]>=3.0.0,<4.0.0",  # Needs to be specified separately as it's up to instance
    "invoke>=2.2,<3.0",
    "pytest-invenio>=3.3.0,<4.0.0",
    # pytest-invenio includes pytest & co and docker-services-cli
]


[project.entry-points."flask.commands"]
galter_subjects = "galter_subjects_utils.cli:main"


# Only setuptools usage
[tool.setuptools.packages.find]
include = ["galter_subjects_utils", "galter_subjects_utils.*"]

[tool.uv]
# this is needed so that `uv run --extra dev_pre` doesn't
# raise an incompatibility error according to uv.
# See https://docs.astral.sh/uv/concepts/projects/config/#conflicting-dependencies
conflicts = [
    [
      { extra = "dev" },
      { extra = "dev_pre" },
    ],
]

[tool.check-manifest]
ignore = [
    ".*-requirements.txt",
    "*.bin",
    "*.gitkeep",
    ".venv/",
    ".editorconfig",
    "tasks.py"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--isort",
    "--pydocstyle",
    "--pycodestyle",
    "--doctest-glob='*.rst'",
    "--doctest-modules",
    "--cov=galter_subjects_utils",
    "--cov-report=term-missing",
    "--import-mode=importlib",
]
testpaths = ["tests", "galter_subjects_utils"]

[tool.pydocstyle]
add_ignore = ["D401", "D403"]
